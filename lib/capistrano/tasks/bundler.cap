namespace :bundler do
  desc <<-DESC
        Install the current Bundler environment. By default, gems will be \
        installed to the shared/bundle path. Gems in the development and \
        test group will not be installed. The install command is executed \
        with the --deployment and --quiet flags.

        You can override any of these defaults by setting the variables shown below.

          set :bundle_gemfile, -> { release_path.join('Gemfile') }
          set :bundle_dir, -> { shared_path.join('bundle') }
          set :bundle_environment_variables, {}
          set :bundle_flags, '--deployment --quiet'
          set :bundle_without, %w{development test}.join(' ')
          set :bundle_binstubs, -> { shared_path.join('bin') }
          set :bundle_roles, :all
    DESC
  task :install do
    on roles fetch(:bundle_roles) do
      within release_path do
        with fetch(:bundle_environment_variables) do
          execute :bundle, "--gemfile #{fetch(:bundle_gemfile)}",
            "--path #{fetch(:bundle_dir)}",
            fetch(:bundle_flags),
            "--binstubs #{fetch(:bundle_binstubs)}",
            "--without #{fetch(:bundle_without)}"
        end
      end
    end
  end

  task :map_bins do
    fetch(:bundle_bins).each do |command|
      SSHKit.config.command_map.prefix[command.to_sym].push("bundle exec")
    end
  end

  before 'deploy:updated', 'bundler:install'
end

Capistrano::DSL.stages.each do |stage|
  after stage, 'bundler:map_bins'
end

namespace :load do
  task :defaults do
    set :bundle_gemfile, -> { release_path.join('Gemfile') }
    set :bundle_dir, -> { shared_path.join('bundle') }
    set :bundle_environment_variables, {}
    set :bundle_flags, '--deployment --quiet'
    set :bundle_without, %w{development test}.join(' ')
    set :bundle_binstubs, -> { shared_path.join('bin') }
    set :bundle_roles, :all
    set :bundle_bins, %w{gem rake rails}
  end
end
